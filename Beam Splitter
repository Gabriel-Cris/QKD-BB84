import numpy as np

def beam_splitter(photons_states_after_channel, alice_basis_selection):
    # Initialize the output state as the input state
    photons_states_after_beam_splitter = photons_states_after_channel.copy()
    
    # Find the indices of the rectangular and circular basis selections
    rect = np.where(alice_basis_selection == 0)[0]  # Rectlinear bases positions
    circ = np.where(alice_basis_selection == 1)[0]  # Circular bases positions
    
    # If rectlinear base is selected for measurement, set circular outcomes to 0
    photons_states_after_beam_splitter[2:4, rect] = 0  # Elements #3 and #4 are indexed as 2 and 3 in Python
    
    # If circular base is selected for measurement, set rectlinear outcomes to 0
    photons_states_after_beam_splitter[0:2, circ] = 0  # Elements #1 and #2 are indexed as 0 and 1 in Python
    
    return photons_states_after_beam_splitter
