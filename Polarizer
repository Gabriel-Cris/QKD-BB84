import numpy as np

def polarizer(alice_basis_selection, key_bits, number_of_photons):
    # Initialization
    alice_polarized_photon_states = np.zeros(number_of_photons, dtype=int)

    # Computing the polarized states
    # In BB84 we have 4 states, let's encode them as follows:
    # Horizontal: state=1,
    # Vertical: state=2,
    # Right_circular: state=3
    # Left_circular: state=4.

    for i in range(number_of_photons):
        if alice_basis_selection[i] == 0 and key_bits[i] == 0:
            state = 1  # horizontally polarized (angle=0: bit0)
        elif alice_basis_selection[i] == 0 and key_bits[i] == 1:
            state = 2  # vertically polarized (angle=90: bit1)
        elif alice_basis_selection[i] == 1 and key_bits[i] == 0:
            state = 3  # right-circular (angle=45: bit0)
        elif alice_basis_selection[i] == 1 and key_bits[i] == 1:
            state = 4  # left-circular (angle=-45: bit1)

        alice_polarized_photon_states[i] = state

    return alice_polarized_photon_states
