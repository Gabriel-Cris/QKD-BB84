import numpy as np

def polarizing_beam_splitter(photons_states_after_beam_splitter, number_of_photons):
    # Initialization
    photons_states_after_polarizing_beam_splitter = np.zeros(number_of_photons, dtype=int)
    r = np.random.rand(number_of_photons)

    for i in range(number_of_photons):
        prob = photons_states_after_beam_splitter[:, i]
        photons_states_after_polarizing_beam_splitter[i] = np.sum(r[i] >= np.cumsum(np.concatenate(([0], prob))))

    return photons_states_after_polarizing_beam_splitter
